EventId,EventTemplate,Occurrences
b8e21dc7,printFreezingDisplayLogsopening app wtoken = AppWindowToken{<*> token = Token{<*> ActivityRecord{<*> u0 <*>/.<*> t761}}} allDrawn = false startingDisplayed = false startingMoved = false isRelaunching = false,1
c2871baa,"acquire lock = <*> flags = <*> tag = ""View Lock"" name = <*> ws = null uid = <*> pid = <*>",1
14acc35d,ready = true policy = <*> wakefulness = <*> wksummary = <*> uasummary = <*> bootcompleted = true boostinprogress = false waitmodeenable = false mode = false manual = <*> auto = -<*> adj = <*>.0userId = <*>,199
7d269c33,Skipping AppWindowToken{<*> token = Token{<*> ActivityRecord{<*> u0 <*> t761}}} -- going to hide,4
ae0e6d6d,visible is <*>,3
168e62e2,mVisiblity.getValue is false,5
9042ff8a,visible is <*> gt <*>,2
4109b23f,"release lock = <*> flg = <*> tag = ""View Lock"" name = <*>"" ws = null uid = <*> pid = <*>",1
92bf778c,updateClipping isOverlap false getTopPadding = <*>.<*> Translation = <*>,52
fd4bbd8e,updateDimmedActivatedHideSensitive overlap false,52
c9e1b6de,getRunningAppProcesses caller <*> does not hold REAL_GET_TASKS; limiting output,81
4bb114d8,release lock = <*> flg = <*> tag = <*> name = <*> ws = <*> uid = <*> pid = <*>,25
84a4439f,setSystemUiVisibility vis = <*> mask = <*> oldVal = <*> newVal = <*> diff = <*> fullscreenStackVis = <*> dockedStackVis = <*> fullscreenStackBounds = Rect(<*> <*> - <*> <*>) dockedStackBounds = Rect(<*> <*> - <*> <*>),200
3c2ee2af,cancelAutohide,15
b841bad4,notifyUiVisibilityChanged vis = <*> SystemUiVisibility = <*>,19
13759f7c,Destroying surface Surface(name = SurfaceView - <*><*>.<*>) called by <*> <*> <*> <*> <*> <*> <*>$Stub.onTransact <*> <*> <*> <*> <*> <bottom of call stack> <bottom of call stack>,1
9cbe4879,Destroying surface Surface(name = <*><*>.<*>) called by <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*>,7
e928ba3b,userActivityNoUpdateLocked eventTime = <*> event = <*> flags = <*> uid = <*>,69
14361819,orientation change is complete call stopFreezingDisplayLocked,1
d3d08bbe,Screen frozen for +1s0ms due to Window{<*> u0 <*><*>.<*>},1
4bea79c0,startAnimation begin,1
d8791e4b,startAnimation end,1
cd4eac10,remove(PendingIntent{<*> PendingIntentRecord{<*> <*> broadcastIntent}}) changed bounds; rebatching,2
491f56b5,rotationForOrientationLw(orient = <*> last = <*>); user = <*> USER_ROTATION_LOCKED,3
4c32608b,Application requested orientation <*> got rotation <*> which has compatible metrics,3
5f5592ce,acquire lock = <*> flags = <*> tag = <*> name = <*> ws = <*> uid = <*> pid = <*>,25
78791997,shouldBlockLocation running ...,37
9a745c68,shouldBlockLocation ret false,33
c22c4fc5,getNeighboringCellInfo calling app is <*>,5
bcab3745,"Releasing suspend blocker ""PowerManagerService.WakeLocks"".",33
956ace7c,HBM brightnessIn = <*>,85
b46f4fb2,HBM brightnessOut = <*>,85
4a54c1b3,Animating brightness target = <*> rate = <*>,85
482e1e93,suspendAutohide,23
afc2bb06,interceptKeyTq keycode = <*> interactive = true keyguardActive = false policyFlags = <*> down <*> canceled false,14
bfacccc3,interceptKeyBeforeQueueing key <*> result <*>,14
8d7445f8,resumeSuspendedAutohide,10
eeec1449,querySoundEffectsEnabled...,17
86d02085,"Acquiring suspend blocker ""PowerManagerService.WakeLocks"".",33
afda6916,Bad activity token <*> <*>,1
2a46c599,<*> <*> cannot be cast to <*>$Token,1
df611466,onTouchEvent <*> x = <*>.<*> y = <*>.<*>,2
ade15b9a,schedulePeek,1
33c7b245,getRingtonePlayer...,2
af1fe836,disable < expand <*> alerts <*> back home recent clock navigationbar search quick_settings >,6
a836e58b,updateLightsLocked mInCall = false mScreenOn = true ledNotification = = null?true,4
5aed32fe,updateLightsLocked turn off notificationLight,6
3de973fc,overlapAmount <*>.<*> previousNotificationEnd <*>.<*> newYTranslation -<*>.<*> location <*> i <*> getTopPadding <*>.<*> getLocationOnScreen() -<*>,13
c034de43,state.clipTopAmount <*> i <*>,12
6c07e465,updateClipping isOverlap true getTopPadding = <*>.<*> Translation = -<*>.<*>,13
49ed2138,updateDimmedActivatedHideSensitive overlap true,13
f02115d0,onExpandingStarted,2
cd7563b4,onTrackingStarted,1
59b4d141,state.clipTopAmount -<*> i <*>,1
b2eff000,cancelPeek false,20
eb5b9a89,flingToHeight vel = <*>.<*> expand = <*> target = <*>.<*> collapseSpeedUpFactor = <*>.<*> expandBecauseOfFalsing = false,2
c29945e0,onTrackingStopped true,1
b5721111,onExpandingFinished,2
e8a5f2bf,Sending non-protected broadcast <*> from system <*> <*><*> pkg <*>,2
dac08128,logNotificationVisibilityChanges runInThread start,6
fbd5de68,onNotificationVisibilityChanged called,6
eda14053,logNotificationVisibilityChanges runInThread over,6
6ed37c98,isSimPinSecure mSimDatas is null or empty,1
2f983de0,registerCallback not in UI.,3
34f84013,<*> Must execute in UI,3
fb4a335d,*** register callback for <*> <*>,1
3ad5a38d,*** unregister callback for null,1
0d4be1ae,[PhoneIntfMgr] getDataEnabled subId = <*> <*> = <*>,2
90e08c76,onInterceptTouchEvent MotionEvent { action = <*> actionButton = <*> id[<*>] = <*> x[<*>] = <*>.<*> y[<*>] = <*>.<*> toolType[<*>] = TOOL_TYPE_FINGER buttonState = <*> metaState = <*> flags = <*> edgeFlags = <*> pointerCount = <*> historySize = <*> eventTime = <*> downTime = <*> deviceId = <*> source = <*> } mBlockTouches = false,4
52455f13,playSoundEffect effectType <*>,10
b51d5d36,animateCollapsePanels flags = <*> force = <*> delayed = <*> mExpandedVisible = true,3
c5be93aa,START u0 {act = <*> flg = <*> cmp = <*>/.activity.SplashActivity (has extras)} from uid <*> on display <*>,1
b3ae5c59,ActivityRecord info ActivityInfo{<*> <*>} euid <*>,4
06c4f169,onNotificationClick called,2
2b0ebf25,cancelNotification index <*>,3
7ef44be5,cancelNotification cancelNotificationLocked callingUid = <*> callingPid = <*>,2
0d23cf06,cancelNotificationLocked called tell the app reason = <*>,2
e8925df5,cancelNotificationLocked <*> <*> <*> null <*>,2
fe7cf63f,cancelNotificationLocked remove = <*>,2
7f4eb773,applyOptionsLocked Unknown animationType = <*>,2
094b0e8d,Taking screenshot from Surface with crop [Rect(<*> <*> - <*> <*>)] width [<*>] height [<*>] minLayer [<*>] maxLayer [<*>] inRotation [false] rot [<*>],4
d25e70cd,removeNotification <*> <*> <*> null <*>,2
ecda708f,updateNotificationShade total = <*> active = <*>,13
e330da66,The change in focus caused us to need to do a layout <*>,12
b4f3261c,setLightsOn(true),181
99e75217,removeNotificationChildren,12
6d619a7f,Skipping withExcluded false tr.intent Intent { flg = <*> cmp = <*>/.recents.RecentsActivity bnds = [<*> <*>][<*> <*>] },14
9a302525,Skipping withExcluded false tr.intent Intent { <*> flg = <*> cmp = <*> (has extras) },35
189e7c74,Skipping withExcluded false tr.intent Intent { act = <*> dat = tel xxxxxxxxxxx flg = <*> cmp = <*>/.ChooseSubActivity (has extras) },7
f9d883c2,Skipping withExcluded false tr.intent Intent { act = <*> dat = file //<*>.apk typ = application<*>.android.package-archive flg = <*> cmp = <*>/.PackageInstallerActivity (has extras) },7
1772e1bd,getRecentTasks num = <*> flags = <*> totalTasks = <*>,14
a9396737,getRecentTasks topActivity = ComponentInfo{<*><*>.<*>},14
ee2e3294,cancelNotificationWithTag pid <*> uid = <*> tag = null pkg = <*> id = <*>,20
dfdcebb0,cancelNotification index -<*>,20
da45c339,makeExpandedInvisible mExpandedVisible = true,3
fbb3c9bb,closeQs,12
18084d2f,instantCollapse,9
d3976d59,*** unregister callback for <*> <*>,1
6acfe88d,getTasks caller <*> does not hold REAL_GET_TASKS; limiting output,37
a6b9ef39,isMusicActive...,12
aa14a9c9,Start dump calling from pid = <*> uid = <*>,1
6322342b,setWiredDeviceConnectionState type -<*> state <*>,1
520a3a3b,setWiredDeviceConnectionState type <*> state <*>,1
35abe8c5,ActivityManagerService attachApplication callingPid = <*>,4
219ced65,isBluetoothA2dpOn...,1
ce34163a,isBluetoothScoOn...,1
99cbb9ba,getLastAudibleStreamVolume treamType <*>,9
2a9a6d07,getDevicesForStream streamType <*>,2
369d5eff,cleanUpApplicationRecord -- <*>,6
7b48573a,cleanUpApplicationRecordLocked pid <*> restart false,6
172db5b8,cleanUpApplicationRecordLocked reset pid <*> euid <*>,6
33e15bd0,stopWifiDisplayScanLocked record.mWifiDisplayScanRequested = false,6
7735d2c2,stopWifiDisplayScanLocked mWifiDisplayScanRequestCount = <*>,6
eadc277d,getMode...,1
2447d9c8,setSpeakerphoneOn on true,2
8aaf64c8,sending alarm Alarm{<*> type <*> when <*> PendingIntent{<*> PendingIntentRecord{<*> android broadcastIntent}}} repeatInterval = <*> listenerTag = time_tick,3
b0fb9415,Received TIME_TICK alarm; rescheduling,3
215c579a,scheduleTimeTickEvent triggerAtTime = <*>,3
7233f052,received broadcast <*>,4
3e03b5e1,handleTimeUpdate,3
ecca356b,Destroying surface Surface(name = PopupWindow <*>) called by <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*>,14
63ed2784,sending alarm Alarm{<*> type <*> when <*> PendingIntent{<*> PendingIntentRecord{<*> <*> broadcastIntent}}} repeatInterval = <*> listenerTag = null,2
f78dcf48,Killing <*> <*><*> (adj <*>) empty for 1810s,1
91198dda,Unable to start service Intent { act = <*> cmp = <*><*>.<*> } U = <*> not found,1
13d3f523,unregisterAudioFocusListener...,1
504c331a,abandonAudioFocus,1
fbc54fb7,[HSM] stayAwake false uid <*> pid <*>,1
42f6718e,Pid <*> MediaPlayer destructor,1
58699af0,Process <*> qzone (pid <*>) has died,1
d8cb5b06,Scheduling restart of crashed service <*><*>.<*> in 1000ms,1
d4a8e705,new Process app = ProcessRecord{<*> <*> <*> qzone<*>} name <*> qzone euid <*>,1
89735099,Start proc <*> <*> qzone<*> for service <*><*>.<*>,1
a9a0e76e,Destroying surface Surface(name = InputMethod) called by <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*>$H.handleMessage <*> <*> <*>,3
0d420934,animateCollapsePanels flags = <*> force = false delayed = false mExpandedVisible = false,5
65b592a0,enqueueNotificationInternal pkg = <*> id = <*> notification = Notification(pri = <*> contentView = null vibrate = <*> sound = null tick defaults = <*> flags = <*> color = <*> <*> vis = PRIVATE),2
e9621037,enqueueNotificationInternal n.getKey = <*> <*> <*> null <*>,2
99718fbd,getRingerMode...,3
e6415b0d,updateLightsLocked mInCall = false mScreenOn = true ledNotification = = null?false,2
437bebb7,addNotification key = <*> <*> <*> null <*>,2
3a97dc6f,mHeadsUpExistenceChangedRunnable,4
14081a84,Marking notification as seen <*> <*> <*> null <*>,2
36dc96c6,onNotificationExpansionChanged called,2
1038a59b,START u0 {act = <*> cat = [<*>] flg = <*> cmp = <*> bnds = [<*> <*>][<*> <*>]} from uid <*> on display <*>,2
a54953d5,ACTIVITY check resid <*> size = <*>,2
d027f27f,shouldBlockLocation ret true,4
0a050854,getAllCellInfo is blocked by permission manager . callingPackage = <*>,3
2cbec1de,getCellLocation is blocked by permission manager uid <*> pid <*>,1
d639dd08,isWiredHeadsetOn...,1
e05b9cb1,setDataSource(<*> <*> <*>),1
17b2628e,getStreamVolume treamType <*>,1
b00fdb37,updateIsPoweredLocked wasPowered = false mIsPowered = false oldPlugType = <*> mPlugType = <*> mBatteryLevel = <*>,1
043aef98,ACTION_BATTERY_CHANGED AMP <*>; Volt <*>,1
4febbd02,updateChargingLocked charging = false,1
279b652e,onReceive action <*>,1
e81f8eb2,ACTION_BATTERY_CHANGED pluggedType <*>,1
7465dea5,ApStaDisabledState what = <*>,1
01334395,DefaultState what = <*>,1
fd241a93,battery changed pluggedType <*>,1
6a9f7f7c,RefreshBatteryInfo isBatteryLow <*>,2
0202fa37,ChargingSpeed Wattage -<*> ST <*> --> <*>,1
e23c2601,handleBatteryUpdate,1
d77010ae,START u0 {flg = <*> cmp = <*>/.ui.LauncherUI (has extras)} from uid <*> on display <*>,1
4be9168e,startActivity called from non-Activity context; forcing Intent.FLAG_ACTIVITY_NEW_TASK for Intent { flg = <*> cmp = <*>/.ui.LauncherUI (has extras) },1
c027fdc9,makeExpandedInvisible mExpandedVisible = false,1
